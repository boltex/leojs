"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[306],{5466:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var t=n(4848),i=n(8453);const o={sidebar_position:4},r="Writing Leo scripts",l={id:"getting-started/tutorial-scripting",title:"Writing Leo scripts",description:"This chapter tells how to write Leo scripts, JavaScript (or TypeScript) code that can run from any Leo node.",source:"@site/docs/getting-started/tutorial-scripting.md",sourceDirName:"getting-started",slug:"/getting-started/tutorial-scripting",permalink:"/leojs/docs/getting-started/tutorial-scripting",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"gettingStartedSidebar",previous:{title:"Using Leo as a PIM",permalink:"/leojs/docs/getting-started/tutorial-pim"},next:{title:"Useful Tips",permalink:"/leojs/docs/getting-started/tutorial-tips"}},d={},a=[{value:"Hello World",id:"hello-world",level:2},{value:"Create outline nodes",id:"create-outline-nodes",level:2},{value:"Generate an output file from nodes",id:"generate-an-output-file-from-nodes",level:2},{value:"Predefined symbols: c, g, and p",id:"predefined-symbols-c-g-and-p",level:2},{value:"Positions and vnodes",id:"positions-and-vnodes",level:2},{value:"Generators",id:"generators",level:2},{value:"Summary",id:"summary",level:2}];function c(e){const s={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"writing-leo-scripts",children:"Writing Leo scripts"})}),"\n",(0,t.jsxs)(s.p,{children:["This chapter tells how to write ",(0,t.jsx)(s.strong,{children:"Leo scripts"}),", JavaScript (or TypeScript) code that can run from any Leo node."]}),"\n",(0,t.jsxs)(s.p,{children:["Predefined symbols, ",(0,t.jsx)(s.strong,{children:"c"}),", ",(0,t.jsx)(s.strong,{children:"g"}),", and ",(0,t.jsx)(s.strong,{children:"p"})," give Leo scripts easy access to all the data in the outline. These symbols also allow Leo scripts to execute any code in Leo's own codebase."]}),"\n",(0,t.jsxs)(s.p,{children:["In LeoJS, the ",(0,t.jsx)(s.em,{children:"VSCode API"})," is also available as ",(0,t.jsx)(s.strong,{children:"vscode"}),". Other common modules such as ",(0,t.jsx)(s.em,{children:"crypto, os, path, process and child_process"})," are also available, along with the following libraries: ",(0,t.jsx)(s.em,{children:"SQL, JSZip, pako, showdown, dayjs, md5, csvtojson, difflib, elementtree and ksuid"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Positions"})," and ",(0,t.jsx)(s.strong,{children:"vnodes"})," are the foundation of Leo scripting. leo/core/leoNodes.ts defines the corresponding Position and VNode classes. These classes provide access to all outline data and allow Leo scripts to create and change outlines."]}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:["\ud83d\udd0d ",(0,t.jsx)(s.strong,{children:"Further study"}),(0,t.jsx)(s.br,{}),"\n","The ",(0,t.jsx)(s.a,{href:"/leojs/docs/users-guide/cheatsheet#scripting",children:"scripting portion"})," of ",(0,t.jsx)(s.a,{href:"/leojs/docs/users-guide/cheatsheet",children:"Leo's cheat sheet"})," contains more information about scripting.",(0,t.jsx)(s.br,{}),"\n","For UI interaction in LeoJS examples, see the ",(0,t.jsx)(s.a,{href:"https://github.com/boltex/scripting-samples-leojs",children:"scripting samples repository"}),", along with the ",(0,t.jsx)(s.a,{href:"https://www.youtube.com/watch?v=M_mKXSbVGdE",children:"LeoJS features video"})," to see how to try them directly in your browser."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"hello-world",children:"Hello World"}),"\n",(0,t.jsx)(s.p,{children:'Here is the obligatory "Hello World!" script:'}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"g.es('Hello World!'); // g.es prints all its arguments to the log pane.\n"})}),"\n",(0,t.jsx)(s.p,{children:"In more detail:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsx)(s.li,{children:"Create a node anywhere in the outline."}),"\n",(0,t.jsxs)(s.li,{children:["Put ",(0,t.jsx)(s.code,{children:"g.es('hello, world!');"})," in the node's body text."]}),"\n",(0,t.jsxs)(s.li,{children:["Select the node and type ",(0,t.jsx)(s.strong,{children:"Ctrl-B"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Important"})," If text is selected, execute-script executes only the selected text."]}),"\n",(0,t.jsx)(s.h2,{id:"create-outline-nodes",children:"Create outline nodes"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"p.b"})," is the body text associated with position p. Similarly, ",(0,t.jsx)(s.strong,{children:"p.h"})," is p's headline.\r\np.b and p.h are python properties, so you can assign to p.b and p.h."]}),"\n",(0,t.jsx)(s.p,{children:"This script creates an outline node as the last top-level node:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"const p = c.lastTopLevel().insertAfter();\r\np.h = 'my new node';\r\nc.redraw(p); // Selects the new node.\n"})}),"\n",(0,t.jsx)(s.p,{children:"This script creates multiple nodes, with different headlines:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"const parent = c.lastTopLevel().insertAfter();\r\nparent.h = 'New nodes';\r\nconst table = [\r\n    ['First node', 'Body text for first node'],\r\n    ['Node 2', 'Body text for node 2'],\r\n    ['Last Node', 'Body text for last node\\nLine 2'],\r\n];\r\nfor (const [headline, body] of table) {\r\n    let child = parent.insertAsLastChild();\r\n    child.b = body.trimEnd() + '\\n'; // Ensure exactly one trailing newline.\r\n    child.h = headline;\r\n}\r\n\r\nc.selectPosition(parent); // Another way to select nodes.\r\nc.redraw();\n"})}),"\n",(0,t.jsx)(s.p,{children:"This script creates a node containing today's date in the body text:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:'const p = c.lastTopLevel().insertAfter();\r\np.h = "Today\'s date";\r\np.b = new Date().toDateString();\r\nc.redraw(p);\n'})}),"\n",(0,t.jsx)(s.h2,{id:"generate-an-output-file-from-nodes",children:"Generate an output file from nodes"}),"\n",(0,t.jsx)(s.p,{children:"The script writes the body text of the presently selected node to ~/leo_output_file.txt and then reads and prints it to the log pane:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"const fn = g.os_path_finalize_join(g.app.homeDir, 'leo_output_file.txt');\r\nconst fileUri = g.makeVscodeUri(fn);\r\nconst fileContent = Buffer.from(c.p.b, 'utf-8');\r\n\r\nawait vscode.workspace.fs.writeFile(fileUri, fileContent);\r\n\r\nconst data = await vscode.workspace.fs.readFile(fileUri);\r\n\r\ng.es(Buffer.from(data).toString('utf-8'))\n"})}),"\n",(0,t.jsx)(s.h2,{id:"predefined-symbols-c-g-and-p",children:"Predefined symbols: c, g, and p"}),"\n",(0,t.jsx)(s.p,{children:"The execute-script command predefines the symbols c, g, and p."}),"\n",(0,t.jsxs)(s.p,{children:["c is the ",(0,t.jsx)(s.strong,{children:"commander"})," of the outline containing the script. Commanders are instances of the Commands class, defined in leoCommands.py. Commanders provide access to all outline data ",(0,t.jsx)(s.em,{children:"and"})," all of Leo's source code."]}),"\n",(0,t.jsxs)(s.p,{children:["g is Leo's ",(0,t.jsx)(s.strong,{children:"leo.core.leoGlobals"})," containing many useful functions, including g.es."]}),"\n",(0,t.jsxs)(s.p,{children:["p is the ",(0,t.jsx)(s.strong,{children:"position"})," of the presently selected node. Positions represent nodes at a particular location of an outline. Because of clones, the ",(0,t.jsx)(s.em,{children:"same"})," node may appear at multiple positions in an outline. ",(0,t.jsx)(s.strong,{children:"c.p"})," is the outline's presently selected position."]}),"\n",(0,t.jsx)(s.h2,{id:"positions-and-vnodes",children:"Positions and vnodes"}),"\n",(0,t.jsxs)(s.p,{children:["A ",(0,t.jsx)(s.strong,{children:"position"})," represents an outline node at a ",(0,t.jsx)(s.em,{children:"specific position"})," in the outline. Positions provide methods to insert, delete and move outline nodes. The ",(0,t.jsx)(s.a,{href:"/leojs/docs/users-guide/cheatsheet#scripting",children:"scripting portion"})," of ",(0,t.jsx)(s.a,{href:"/leojs/docs/users-guide/cheatsheet",children:"Leo's cheat sheet"})," lists the most important methods of the position class."]}),"\n",(0,t.jsxs)(s.p,{children:["Because of clones, the ",(0,t.jsx)(s.em,{children:"same"})," node may appear at ",(0,t.jsx)(s.em,{children:"multiple positions"})," in the outline. A ",(0,t.jsx)(s.strong,{children:"vnode"})," represents the node's data, which is shared by all positions referring to that node."]}),"\n",(0,t.jsxs)(s.p,{children:["For any position p, ",(0,t.jsx)(s.strong,{children:"p.b"})," is the node's body text, ",(0,t.jsx)(s.strong,{children:"p.h"})," is the node's headline and ",(0,t.jsx)(s.strong,{children:"p.u"})," is the node's ",(0,t.jsx)(s.a,{href:"/leojs/docs/users-guide/customizing#uas-extensible-attribues-of-nodes",children:"user attributes"}),", and ",(0,t.jsx)(s.strong,{children:"p.v"})," is the position's vnode. Similarly, for any vnode v, ",(0,t.jsx)(s.strong,{children:"v.b"})," is the node's body text, ",(0,t.jsx)(s.strong,{children:"v.h"})," is the node's headline and ",(0,t.jsx)(s.strong,{children:"v.u"})," is the node's user attributes."]}),"\n",(0,t.jsx)(s.h2,{id:"generators",children:"Generators"}),"\n",(0,t.jsxs)(s.p,{children:["Commanders and positions define several ",(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_generators#generator_functions",children:"generators"})," to traverse (step through) an outline. The ",(0,t.jsx)(s.a,{href:"/leojs/docs/users-guide/cheatsheet#scripting",children:"scripting portion"})," of ",(0,t.jsx)(s.a,{href:"/leojs/docs/users-guide/cheatsheet",children:"Leo's cheat sheet"})," lists all of Leo's generators. For example, c.all_positions() traverses the outline in outline order.  The following prints a properly-indented list of all headlines:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"for (const p of c.all_positions()){\r\n    g.es(' '.repeat(p.level()) + p.h);\r\n}\n"})}),"\n",(0,t.jsx)(s.p,{children:"Scripts may capture positions like this:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"const aList = [...c.all_positions()];\n"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Warning"}),": stored positions become invalid when outline changes. ",(0,t.jsx)(s.strong,{children:"c.positionExists(p)"})," is True if p is valid in c's outline."]}),"\n",(0,t.jsxs)(s.p,{children:["All generators now yield ",(0,t.jsx)(s.em,{children:"copies"})," of positions."]}),"\n",(0,t.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"execute-script predefines c, g, and p."}),"\n",(0,t.jsx)(s.li,{children:"c is a commander, g is the leoGlobals module, and p is the current position."}),"\n",(0,t.jsx)(s.li,{children:"Vnodes contain all outline data."}),"\n",(0,t.jsx)(s.li,{children:"Positions provide easy access to vnodes."}),"\n",(0,t.jsx)(s.li,{children:"Positions become invalid when outline nodes are inserted, deleted, or moved."}),"\n",(0,t.jsx)(s.li,{children:"Generators visit all or parts of the outline, in a specified order."}),"\n"]}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:["\ud83d\udd0d ",(0,t.jsx)(s.strong,{children:"Further study"}),(0,t.jsx)(s.br,{}),"\n","Consult ",(0,t.jsx)(s.a,{href:"/leojs/docs/users-guide/cheatsheet",children:"Leo's cheat sheet"})," and ",(0,t.jsx)(s.a,{href:"/leojs/docs/advanced-topics/scripting-guide",children:"Leo's scripting guide"}),"."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>l});var t=n(6540);const i={},o=t.createContext(i);function r(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);